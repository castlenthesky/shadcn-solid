{
	"name": "sheet",
	"dependencies": ["@kobalte/core"],
	"files": [
		{
			"name": "sheet.tsx",
			"content": "import { cn } from \"@/libs/cn\";\nimport type {\n\tDialogContentProps,\n\tDialogDescriptionProps,\n\tDialogTitleProps,\n} from \"@kobalte/core/dialog\";\nimport { Dialog as DialogPrimitive } from \"@kobalte/core/dialog\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { VariantProps } from \"class-variance-authority\";\nimport { cva } from \"class-variance-authority\";\nimport type { ComponentProps, ParentProps, ValidComponent } from \"solid-js\";\nimport { mergeProps, splitProps } from \"solid-js\";\n\nexport const Sheet = DialogPrimitive;\nexport const SheetTrigger = DialogPrimitive.Trigger;\n\nexport const sheetVariants = cva(\n\t\"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[expanded]:animate-in data-[closed]:animate-out data-[expanded]:duration-200 data-[closed]:duration-200\",\n\t{\n\t\tvariants: {\n\t\t\tside: {\n\t\t\t\ttop: \"inset-x-0 top-0 border-b data-[closed]:slide-out-to-top data-[expanded]:slide-in-from-top\",\n\t\t\t\tbottom:\n\t\t\t\t\t\"inset-x-0 bottom-0 border-t data-[closed]:slide-out-to-bottom data-[expanded]:slide-in-from-bottom\",\n\t\t\t\tleft: \"inset-y-0 left-0 h-full w-3/4 border-r data-[closed]:slide-out-to-left data-[expanded]:slide-in-from-left sm:max-w-sm\",\n\t\t\t\tright:\n\t\t\t\t\t\"inset-y-0 right-0 h-full w-3/4 border-l data-[closed]:slide-out-to-right data-[expanded]:slide-in-from-right sm:max-w-sm\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tside: \"right\",\n\t\t},\n\t},\n);\n\ntype sheetContentProps<T extends ValidComponent = \"div\"> = ParentProps<\n\tDialogContentProps<T> &\n\t\tVariantProps<typeof sheetVariants> & {\n\t\t\tclass?: string;\n\t\t}\n>;\n\nexport const SheetContent = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, sheetContentProps<T>>,\n) => {\n\tconst merge = mergeProps<sheetContentProps<T>[]>({ side: \"right\" }, props);\n\tconst [local, rest] = splitProps(merge as sheetContentProps, [\n\t\t\"class\",\n\t\t\"children\",\n\t\t\"side\",\n\t]);\n\n\treturn (\n\t\t<DialogPrimitive.Portal>\n\t\t\t<DialogPrimitive.Overlay\n\t\t\t\tclass={cn(\n\t\t\t\t\t\"fixed inset-0 z-50 bg-background/80 data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[expanded]:fade-in-0\",\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<DialogPrimitive.Content\n\t\t\t\tclass={sheetVariants({ side: local.side, class: local.class })}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{local.children}\n\t\t\t\t<DialogPrimitive.CloseButton class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-[opacity,box-shadow] hover:opacity-100 focus:outline-none focus:ring-[1.5px] focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none\">\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\tclass=\"h-4 w-4\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\t\td=\"M18 6L6 18M6 6l12 12\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<title>Close</title>\n\t\t\t\t\t</svg>\n\t\t\t\t</DialogPrimitive.CloseButton>\n\t\t\t</DialogPrimitive.Content>\n\t\t</DialogPrimitive.Portal>\n\t);\n};\n\ntype sheetTitleProps<T extends ValidComponent = \"h2\"> = DialogTitleProps<T> & {\n\tclass?: string;\n};\n\nexport const SheetTitle = <T extends ValidComponent = \"h2\">(\n\tprops: PolymorphicProps<T, sheetTitleProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as sheetTitleProps, [\"class\"]);\n\n\treturn (\n\t\t<DialogPrimitive.Title\n\t\t\tclass={cn(\"text-lg font-semibold text-foreground\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype sheetDescriptionProps<T extends ValidComponent = \"p\"> =\n\tDialogDescriptionProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const SheetDescription = <T extends ValidComponent = \"p\">(\n\tprops: PolymorphicProps<T, sheetDescriptionProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as sheetDescriptionProps, [\"class\"]);\n\n\treturn (\n\t\t<DialogPrimitive.Description\n\t\t\tclass={cn(\"text-sm text-muted-foreground\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport const SheetHeader = (props: ComponentProps<\"div\">) => {\n\tconst [local, rest] = splitProps(props, [\"class\"]);\n\n\treturn (\n\t\t<div\n\t\t\tclass={cn(\n\t\t\t\t\"flex flex-col space-y-2 text-center sm:text-left\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport const SheetFooter = (props: ComponentProps<\"div\">) => {\n\tconst [local, rest] = splitProps(props, [\"class\"]);\n\n\treturn (\n\t\t<div\n\t\t\tclass={cn(\n\t\t\t\t\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n"
		}
	],
	"type": "components:ui"
}
