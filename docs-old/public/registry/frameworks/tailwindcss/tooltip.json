{
	"name": "tooltip",
	"dependencies": ["@kobalte/core"],
	"files": [
		{
			"name": "tooltip.tsx",
			"content": "import { cn } from \"@/libs/cn\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type {\n\tTooltipContentProps,\n\tTooltipRootProps,\n} from \"@kobalte/core/tooltip\";\nimport { Tooltip as TooltipPrimitive } from \"@kobalte/core/tooltip\";\nimport { type ValidComponent, mergeProps, splitProps } from \"solid-js\";\n\nexport const TooltipTrigger = TooltipPrimitive.Trigger;\n\nexport const Tooltip = (props: TooltipRootProps) => {\n\tconst merge = mergeProps<TooltipRootProps[]>(\n\t\t{\n\t\t\tgutter: 4,\n\t\t\tflip: false,\n\t\t},\n\t\tprops,\n\t);\n\n\treturn <TooltipPrimitive {...merge} />;\n};\n\ntype tooltipContentProps<T extends ValidComponent = \"div\"> =\n\tTooltipContentProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const TooltipContent = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, tooltipContentProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as tooltipContentProps, [\"class\"]);\n\n\treturn (\n\t\t<TooltipPrimitive.Portal>\n\t\t\t<TooltipPrimitive.Content\n\t\t\t\tclass={cn(\n\t\t\t\t\t\"z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[expanded]:fade-in-0 data-[closed]:zoom-out-95 data-[expanded]:zoom-in-95\",\n\t\t\t\t\tlocal.class,\n\t\t\t\t)}\n\t\t\t\t{...rest}\n\t\t\t/>\n\t\t</TooltipPrimitive.Portal>\n\t);\n};\n"
		}
	],
	"type": "components:ui"
}
