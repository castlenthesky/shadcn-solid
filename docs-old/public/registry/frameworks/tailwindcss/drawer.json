{
	"name": "drawer",
	"dependencies": ["@corvu/drawer"],
	"files": [
		{
			"name": "drawer.tsx",
			"content": "import { cn } from \"@/libs/cn\";\nimport type {\n\tContentProps,\n\tDescriptionProps,\n\tDynamicProps,\n\tLabelProps,\n} from \"@corvu/drawer\";\nimport DrawerPrimitive from \"@corvu/drawer\";\nimport type { ComponentProps, ParentProps, ValidComponent } from \"solid-js\";\nimport { splitProps } from \"solid-js\";\n\nexport const Drawer = DrawerPrimitive;\nexport const DrawerTrigger = DrawerPrimitive.Trigger;\nexport const DrawerClose = DrawerPrimitive.Close;\n\ntype drawerContentProps<T extends ValidComponent = \"div\"> = ParentProps<\n\tContentProps<T> & {\n\t\tclass?: string;\n\t}\n>;\n\nexport const DrawerContent = <T extends ValidComponent = \"div\">(\n\tprops: DynamicProps<T, drawerContentProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as drawerContentProps, [\n\t\t\"class\",\n\t\t\"children\",\n\t]);\n\tconst ctx = DrawerPrimitive.useContext();\n\n\treturn (\n\t\t<DrawerPrimitive.Portal>\n\t\t\t<DrawerPrimitive.Overlay\n\t\t\t\tclass=\"fixed inset-0 z-50 data-[transitioning]:transition-colors data-[transitioning]:duration-200\"\n\t\t\t\tstyle={{\n\t\t\t\t\t\"background-color\": `hsl(var(--background) / ${0.8 * ctx.openPercentage()})`,\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<DrawerPrimitive.Content\n\t\t\t\tclass={cn(\n\t\t\t\t\t\"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-xl border bg-background after:absolute after:inset-x-0 after:top-full after:h-[50%] after:bg-inherit data-[transitioning]:transition-transform data-[transitioning]:duration-200 md:select-none\",\n\t\t\t\t\tlocal.class,\n\t\t\t\t)}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t<div class=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n\t\t\t\t{local.children}\n\t\t\t</DrawerPrimitive.Content>\n\t\t</DrawerPrimitive.Portal>\n\t);\n};\n\nexport const DrawerHeader = (props: ComponentProps<\"div\">) => {\n\tconst [local, rest] = splitProps(props, [\"class\"]);\n\n\treturn (\n\t\t<div\n\t\t\tclass={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport const DrawerFooter = (props: ComponentProps<\"div\">) => {\n\tconst [local, rest] = splitProps(props, [\"class\"]);\n\n\treturn (\n\t\t<div class={cn(\"mt-auto flex flex-col gap-2 p-4\", local.class)} {...rest} />\n\t);\n};\n\ntype DrawerLabelProps = LabelProps & {\n\tclass?: string;\n};\n\nexport const DrawerLabel = <T extends ValidComponent = \"h2\">(\n\tprops: DynamicProps<T, DrawerLabelProps>,\n) => {\n\tconst [local, rest] = splitProps(props as DrawerLabelProps, [\"class\"]);\n\n\treturn (\n\t\t<DrawerPrimitive.Label\n\t\t\tclass={cn(\n\t\t\t\t\"text-lg font-semibold leading-none tracking-tight\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype DrawerDescriptionProps = DescriptionProps & {\n\tclass?: string;\n};\n\nexport const DrawerDescription = <T extends ValidComponent = \"p\">(\n\tprops: DynamicProps<T, DrawerDescriptionProps>,\n) => {\n\tconst [local, rest] = splitProps(props as DrawerDescriptionProps, [\"class\"]);\n\n\treturn (\n\t\t<DrawerPrimitive.Description\n\t\t\tclass={cn(\"text-sm text-muted-foreground\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n"
		}
	],
	"type": "components:ui"
}
