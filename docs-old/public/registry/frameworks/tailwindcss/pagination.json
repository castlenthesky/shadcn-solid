{
	"name": "pagination",
	"dependencies": ["@kobalte/core"],
	"registryDependencies": ["button"],
	"files": [
		{
			"name": "pagination.tsx",
			"content": "import { cn } from \"@/libs/cn\";\nimport type {\n\tPaginationEllipsisProps,\n\tPaginationItemProps,\n\tPaginationPreviousProps,\n\tPaginationRootProps,\n} from \"@kobalte/core/pagination\";\nimport { Pagination as PaginationPrimitive } from \"@kobalte/core/pagination\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { VariantProps } from \"class-variance-authority\";\nimport type { ValidComponent, VoidProps } from \"solid-js\";\nimport { mergeProps, splitProps } from \"solid-js\";\nimport { buttonVariants } from \"./button\";\n\nexport const PaginationItems = PaginationPrimitive.Items;\n\ntype paginationProps<T extends ValidComponent = \"nav\"> =\n\tPaginationRootProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const Pagination = <T extends ValidComponent = \"nav\">(\n\tprops: PolymorphicProps<T, paginationProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as paginationProps, [\"class\"]);\n\n\treturn (\n\t\t<PaginationPrimitive\n\t\t\tclass={cn(\n\t\t\t\t\"mx-auto flex w-full justify-center [&>ul]:flex [&>ul]:flex-row [&>ul]:items-center [&>ul]:gap-1\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype paginationItemProps<T extends ValidComponent = \"button\"> =\n\tPaginationItemProps<T> &\n\t\tPick<VariantProps<typeof buttonVariants>, \"size\"> & {\n\t\t\tclass?: string;\n\t\t};\n\nexport const PaginationItem = <T extends ValidComponent = \"button\">(\n\tprops: PolymorphicProps<T, paginationItemProps<T>>,\n) => {\n\t// @ts-expect-error - required `page`\n\tconst merge = mergeProps<paginationItemProps[]>({ size: \"icon\" }, props);\n\tconst [local, rest] = splitProps(merge as paginationItemProps, [\n\t\t\"class\",\n\t\t\"size\",\n\t]);\n\n\treturn (\n\t\t<PaginationPrimitive.Item\n\t\t\tclass={cn(\n\t\t\t\tbuttonVariants({\n\t\t\t\t\tvariant: \"ghost\",\n\t\t\t\t\tsize: local.size,\n\t\t\t\t}),\n\t\t\t\t\"aria-[current=page]:border aria-[current=page]:border-input aria-[current=page]:bg-background aria-[current=page]:shadow-sm aria-[current=page]:hover:bg-accent aria-[current=page]:hover:text-accent-foreground\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype paginationEllipsisProps<T extends ValidComponent = \"div\"> = VoidProps<\n\tPaginationEllipsisProps<T> & {\n\t\tclass?: string;\n\t}\n>;\n\nexport const PaginationEllipsis = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, paginationEllipsisProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as paginationEllipsisProps, [\"class\"]);\n\n\treturn (\n\t\t<PaginationPrimitive.Ellipsis\n\t\t\tclass={cn(\"flex h-9 w-9 items-center justify-center\", local.class)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<svg\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tclass=\"h-4 w-4\"\n\t\t\t>\n\t\t\t\t<path\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\td=\"M4 12a1 1 0 1 0 2 0a1 1 0 1 0-2 0m7 0a1 1 0 1 0 2 0a1 1 0 1 0-2 0m7 0a1 1 0 1 0 2 0a1 1 0 1 0-2 0\"\n\t\t\t\t/>\n\t\t\t\t<title>More pages</title>\n\t\t\t</svg>\n\t\t</PaginationPrimitive.Ellipsis>\n\t);\n};\n\ntype paginationPreviousProps<T extends ValidComponent = \"button\"> =\n\tPaginationPreviousProps<T> &\n\t\tPick<VariantProps<typeof buttonVariants>, \"size\"> & {\n\t\t\tclass?: string;\n\t\t};\n\nexport const PaginationPrevious = <T extends ValidComponent = \"button\">(\n\tprops: PolymorphicProps<T, paginationPreviousProps<T>>,\n) => {\n\tconst merge = mergeProps<paginationPreviousProps<T>[]>(\n\t\t{ size: \"icon\" },\n\t\tprops,\n\t);\n\tconst [local, rest] = splitProps(merge as paginationPreviousProps, [\n\t\t\"class\",\n\t\t\"size\",\n\t]);\n\n\treturn (\n\t\t<PaginationPrimitive.Previous\n\t\t\tclass={cn(\n\t\t\t\tbuttonVariants({\n\t\t\t\t\tvariant: \"ghost\",\n\t\t\t\t\tsize: local.size,\n\t\t\t\t}),\n\t\t\t\t\"aria-[current=page]:border aria-[current=page]:border-input aria-[current=page]:bg-background aria-[current=page]:shadow-sm aria-[current=page]:hover:bg-accent aria-[current=page]:hover:text-accent-foreground\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<svg\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tclass=\"h-4 w-4\"\n\t\t\t>\n\t\t\t\t<path\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\td=\"m15 6l-6 6l6 6\"\n\t\t\t\t/>\n\t\t\t\t<title>Previous page</title>\n\t\t\t</svg>\n\t\t</PaginationPrimitive.Previous>\n\t);\n};\n\ntype paginationNextProps<T extends ValidComponent = \"button\"> =\n\tpaginationPreviousProps<T>;\n\nexport const PaginationNext = <T extends ValidComponent = \"button\">(\n\tprops: PolymorphicProps<T, paginationNextProps<T>>,\n) => {\n\tconst merge = mergeProps<paginationNextProps<T>[]>({ size: \"icon\" }, props);\n\tconst [local, rest] = splitProps(merge as paginationNextProps, [\n\t\t\"class\",\n\t\t\"size\",\n\t]);\n\n\treturn (\n\t\t<PaginationPrimitive.Next\n\t\t\tclass={cn(\n\t\t\t\tbuttonVariants({\n\t\t\t\t\tvariant: \"ghost\",\n\t\t\t\t\tsize: local.size,\n\t\t\t\t}),\n\t\t\t\t\"aria-[current=page]:border aria-[current=page]:border-input aria-[current=page]:bg-background aria-[current=page]:shadow-sm aria-[current=page]:hover:bg-accent aria-[current=page]:hover:text-accent-foreground\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<svg\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\tclass=\"h-4 w-4\"\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t>\n\t\t\t\t<path\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\td=\"m9 6l6 6l-6 6\"\n\t\t\t\t/>\n\t\t\t\t<title>Next page</title>\n\t\t\t</svg>\n\t\t</PaginationPrimitive.Next>\n\t);\n};\n"
		}
	],
	"type": "components:ui"
}
