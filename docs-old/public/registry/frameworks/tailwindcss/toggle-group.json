{
	"name": "toggle-group",
	"dependencies": ["@kobalte/core"],
	"files": [
		{
			"name": "toggle-group.tsx",
			"content": "import { cn } from \"@/libs/cn\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type {\n\tToggleGroupItemProps,\n\tToggleGroupRootProps,\n} from \"@kobalte/core/toggle-group\";\nimport { ToggleGroup as ToggleGroupPrimitive } from \"@kobalte/core/toggle-group\";\nimport type { VariantProps } from \"class-variance-authority\";\nimport type { Accessor, ParentProps, ValidComponent } from \"solid-js\";\nimport { createContext, createMemo, splitProps, useContext } from \"solid-js\";\nimport { toggleVariants } from \"./toggle\";\n\nconst ToggleGroupContext =\n\tcreateContext<Accessor<VariantProps<typeof toggleVariants>>>();\n\nconst useToggleGroup = () => {\n\tconst context = useContext(ToggleGroupContext);\n\n\tif (!context) {\n\t\tthrow new Error(\n\t\t\t\"`useToggleGroup`: must be used within a `ToggleGroup` component\",\n\t\t);\n\t}\n\n\treturn context;\n};\n\ntype toggleGroupProps<T extends ValidComponent = \"div\"> = ParentProps<\n\tToggleGroupRootProps<T> &\n\t\tVariantProps<typeof toggleVariants> & {\n\t\t\tclass?: string;\n\t\t}\n>;\n\nexport const ToggleGroup = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, toggleGroupProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as toggleGroupProps, [\n\t\t\"class\",\n\t\t\"children\",\n\t\t\"size\",\n\t\t\"variant\",\n\t]);\n\n\tconst value = createMemo<VariantProps<typeof toggleVariants>>(() => ({\n\t\tsize: local.size,\n\t\tvariant: local.variant,\n\t}));\n\n\treturn (\n\t\t<ToggleGroupPrimitive\n\t\t\tclass={cn(\"flex items-center justify-center gap-1\", local.class)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<ToggleGroupContext.Provider value={value}>\n\t\t\t\t{local.children}\n\t\t\t</ToggleGroupContext.Provider>\n\t\t</ToggleGroupPrimitive>\n\t);\n};\n\ntype toggleGroupItemProps<T extends ValidComponent = \"button\"> =\n\tToggleGroupItemProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const ToggleGroupItem = <T extends ValidComponent = \"button\">(\n\tprops: PolymorphicProps<T, toggleGroupItemProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as toggleGroupItemProps, [\"class\"]);\n\tconst context = useToggleGroup();\n\n\treturn (\n\t\t<ToggleGroupPrimitive.Item\n\t\t\tclass={cn(\n\t\t\t\ttoggleVariants({\n\t\t\t\t\tvariant: context().variant,\n\t\t\t\t\tsize: context().size,\n\t\t\t\t}),\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n"
		}
	],
	"type": "components:ui"
}
