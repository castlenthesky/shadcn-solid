{
	"name": "menubar",
	"dependencies": ["@kobalte/core"],
	"files": [
		{
			"name": "menubar.tsx",
			"content": "import { cn } from \"@/libs/cn\";\nimport type {\n\tMenubarCheckboxItemProps,\n\tMenubarContentProps,\n\tMenubarItemLabelProps,\n\tMenubarItemProps,\n\tMenubarMenuProps,\n\tMenubarRadioItemProps,\n\tMenubarRootProps,\n\tMenubarSeparatorProps,\n\tMenubarSubContentProps,\n\tMenubarSubTriggerProps,\n\tMenubarTriggerProps,\n} from \"@kobalte/core/menubar\";\nimport { Menubar as MenubarPrimitive } from \"@kobalte/core/menubar\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { ComponentProps, ParentProps, ValidComponent } from \"solid-js\";\nimport { mergeProps, splitProps } from \"solid-js\";\n\nexport const MenubarSub = MenubarPrimitive.Sub;\nexport const MenubarRadioGroup = MenubarPrimitive.RadioGroup;\n\ntype menubarProps<T extends ValidComponent = \"div\"> = MenubarRootProps<T> & {\n\tclass?: string;\n};\n\nexport const Menubar = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, menubarProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as menubarProps, [\"class\"]);\n\n\treturn (\n\t\t<MenubarPrimitive\n\t\t\tclass={cn(\n\t\t\t\t\"flex h-9 items-center space-x-1 rounded-md border bg-background p-1 shadow-sm\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport const MenubarMenu = (props: MenubarMenuProps) => {\n\tconst merge = mergeProps<MenubarMenuProps[]>(\n\t\t{\n\t\t\tgutter: 8,\n\t\t\tshift: -4,\n\t\t\tflip: false,\n\t\t},\n\t\tprops,\n\t);\n\n\treturn <MenubarPrimitive.Menu {...merge} />;\n};\n\ntype menubarTriggerProps<T extends ValidComponent = \"button\"> =\n\tMenubarTriggerProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const MenubarTrigger = <T extends ValidComponent = \"button\">(\n\tprops: PolymorphicProps<T, menubarTriggerProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as menubarTriggerProps, [\"class\"]);\n\n\treturn (\n\t\t<MenubarPrimitive.Trigger\n\t\t\tclass={cn(\n\t\t\t\t\"flex cursor-default select-none items-center rounded-sm px-3 py-1 text-sm font-medium outline-none focus:(bg-accent text-accent-foreground) data-[expanded]:(bg-accent text-accent-foreground)\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype menubarSubTriggerProps<T extends ValidComponent = \"button\"> = ParentProps<\n\tMenubarSubTriggerProps<T> & {\n\t\tclass?: string;\n\t\tinset?: boolean;\n\t}\n>;\n\nexport const MenubarSubTrigger = <T extends ValidComponent = \"button\">(\n\tprops: PolymorphicProps<T, menubarSubTriggerProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as menubarSubTriggerProps, [\n\t\t\"class\",\n\t\t\"children\",\n\t\t\"inset\",\n\t]);\n\n\treturn (\n\t\t<MenubarPrimitive.SubTrigger\n\t\t\tclass={cn(\n\t\t\t\t\"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:(bg-accent text-accent-foreground) data-[expanded]:(bg-accent text-accent-foreground)\",\n\t\t\t\tlocal.inset && \"pl-8\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t{local.children}\n\t\t\t<svg\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\twidth=\"1em\"\n\t\t\t\theight=\"1em\"\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tclass=\"ml-auto h-4 w-4\"\n\t\t\t>\n\t\t\t\t<path\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\td=\"m9 6l6 6l-6 6\"\n\t\t\t\t/>\n\t\t\t\t<title>Arrow</title>\n\t\t\t</svg>\n\t\t</MenubarPrimitive.SubTrigger>\n\t);\n};\n\ntype menubarSubContentProps<T extends ValidComponent = \"div\"> = ParentProps<\n\tMenubarSubContentProps<T> & {\n\t\tclass?: string;\n\t}\n>;\n\nexport const MenubarSubContent = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, menubarSubContentProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as menubarSubContentProps, [\n\t\t\"class\",\n\t\t\"children\",\n\t]);\n\n\treturn (\n\t\t<MenubarPrimitive.Portal>\n\t\t\t<MenubarPrimitive.SubContent\n\t\t\t\tclass={cn(\n\t\t\t\t\t\"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[expanded]:(animate-in fade-in-0 zoom-in-95) data-[closed]:(animate-out fade-out-0 zoom-out-95) outline-none origin-[--kb-menu-content-transform-origin]\",\n\t\t\t\t\tlocal.class,\n\t\t\t\t)}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{local.children}\n\t\t\t</MenubarPrimitive.SubContent>\n\t\t</MenubarPrimitive.Portal>\n\t);\n};\n\ntype menubarContentProps<T extends ValidComponent = \"div\"> = ParentProps<\n\tMenubarContentProps<T> & {\n\t\tclass?: string;\n\t}\n>;\n\nexport const MenubarContent = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, menubarContentProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as menubarContentProps, [\n\t\t\"class\",\n\t\t\"children\",\n\t]);\n\n\treturn (\n\t\t<MenubarPrimitive.Portal>\n\t\t\t<MenubarPrimitive.Content\n\t\t\t\tclass={cn(\n\t\t\t\t\t\"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[expanded]:(animate-in fade-in-0 zoom-in-95) data-[closed]:(animate-out fade-out-0 zoom-out-95) outline-none origin-[--kb-menu-content-transform-origin]\",\n\t\t\t\t\tlocal.class,\n\t\t\t\t)}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{local.children}\n\t\t\t</MenubarPrimitive.Content>\n\t\t</MenubarPrimitive.Portal>\n\t);\n};\n\ntype menubarItemProps<T extends ValidComponent = \"div\"> =\n\tMenubarItemProps<T> & {\n\t\tclass?: string;\n\t\tinset?: boolean;\n\t};\n\nexport const MenubarItem = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, menubarItemProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as menubarItemProps, [\n\t\t\"class\",\n\t\t\"inset\",\n\t]);\n\n\treturn (\n\t\t<MenubarPrimitive.Item\n\t\t\tclass={cn(\n\t\t\t\t\"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:(bg-accent text-accent-foreground) data-[disabled]:(pointer-events-none opacity-50)\",\n\t\t\t\tlocal.inset && \"pl-8\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype menubarItemLabelProps<T extends ValidComponent = \"div\"> =\n\tMenubarItemLabelProps<T> & {\n\t\tclass?: string;\n\t\tinset?: boolean;\n\t};\n\nexport const MenubarItemLabel = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, menubarItemLabelProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as menubarItemLabelProps, [\n\t\t\"class\",\n\t\t\"inset\",\n\t]);\n\n\treturn (\n\t\t<MenubarPrimitive.ItemLabel\n\t\t\tclass={cn(\n\t\t\t\t\"px-2 py-1.5 text-sm font-semibold\",\n\t\t\t\tlocal.inset && \"pl-8\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype menubarSeparatorProps<T extends ValidComponent = \"hr\"> =\n\tMenubarSeparatorProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const MenubarSeparator = <T extends ValidComponent = \"hr\">(\n\tprops: PolymorphicProps<T, menubarSeparatorProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as menubarSeparatorProps, [\"class\"]);\n\n\treturn (\n\t\t<MenubarPrimitive.Separator\n\t\t\tclass={cn(\"-mx-1 my-1 h-px bg-muted\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype menubarCheckboxItemProps<T extends ValidComponent = \"div\"> = ParentProps<\n\tMenubarCheckboxItemProps<T> & {\n\t\tclass?: string;\n\t}\n>;\n\nexport const MenubarCheckboxItem = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, menubarCheckboxItemProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as menubarCheckboxItemProps, [\n\t\t\"class\",\n\t\t\"children\",\n\t]);\n\n\treturn (\n\t\t<MenubarPrimitive.CheckboxItem\n\t\t\tclass={cn(\n\t\t\t\t\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:(bg-accent text-accent-foreground) data-[disabled]:(pointer-events-none opacity-50)\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<MenubarPrimitive.ItemIndicator class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tclass=\"h-4 w-4\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\td=\"m5 12l5 5L20 7\"\n\t\t\t\t\t/>\n\t\t\t\t\t<title>Checkbox</title>\n\t\t\t\t</svg>\n\t\t\t</MenubarPrimitive.ItemIndicator>\n\t\t\t{local.children}\n\t\t</MenubarPrimitive.CheckboxItem>\n\t);\n};\n\ntype menubarRadioItemProps<T extends ValidComponent = \"div\"> = ParentProps<\n\tMenubarRadioItemProps<T> & {\n\t\tclass?: string;\n\t}\n>;\n\nexport const MenubarRadioItem = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, menubarRadioItemProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as menubarRadioItemProps, [\n\t\t\"class\",\n\t\t\"children\",\n\t]);\n\n\treturn (\n\t\t<MenubarPrimitive.RadioItem\n\t\t\tclass={cn(\n\t\t\t\t\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:(bg-accent text-accent-foreground) data-[disabled]:(pointer-events-none opacity-50)\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<MenubarPrimitive.ItemIndicator class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tclass=\"h-2 w-2\"\n\t\t\t\t>\n\t\t\t\t\t<g\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path d=\"M0 0h24v24H0z\" />\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\td=\"M7 3.34a10 10 0 1 1-4.995 8.984L2 12l.005-.324A10 10 0 0 1 7 3.34\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<title>Radio</title>\n\t\t\t\t</svg>\n\t\t\t</MenubarPrimitive.ItemIndicator>\n\t\t\t{local.children}\n\t\t</MenubarPrimitive.RadioItem>\n\t);\n};\n\nexport const MenubarShortcut = (props: ComponentProps<\"span\">) => {\n\tconst [local, rest] = splitProps(props, [\"class\"]);\n\n\treturn (\n\t\t<span\n\t\t\tclass={cn(\n\t\t\t\t\"ml-auto text-xs tracking-widest text-muted-foreground\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n"
		}
	],
	"type": "components:ui"
}
