{
	"name": "accordion",
	"dependencies": ["@kobalte/core"],
	"files": [
		{
			"name": "accordion.tsx",
			"content": "import { cn } from \"@/libs/cn\";\nimport type {\n\tAccordionContentProps,\n\tAccordionItemProps,\n\tAccordionTriggerProps,\n} from \"@kobalte/core/accordion\";\nimport { Accordion as AccordionPrimitive } from \"@kobalte/core/accordion\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport { type ParentProps, type ValidComponent, splitProps } from \"solid-js\";\n\nexport const Accordion = AccordionPrimitive;\n\ntype accordionItemProps<T extends ValidComponent = \"div\"> =\n\tAccordionItemProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const AccordionItem = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, accordionItemProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as accordionItemProps, [\"class\"]);\n\n\treturn (\n\t\t<AccordionPrimitive.Item class={cn(\"border-b\", local.class)} {...rest} />\n\t);\n};\n\ntype accordionTriggerProps<T extends ValidComponent = \"button\"> = ParentProps<\n\tAccordionTriggerProps<T> & {\n\t\tclass?: string;\n\t}\n>;\n\nexport const AccordionTrigger = <T extends ValidComponent = \"button\">(\n\tprops: PolymorphicProps<T, accordionTriggerProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as accordionTriggerProps, [\n\t\t\"class\",\n\t\t\"children\",\n\t]);\n\n\treturn (\n\t\t<AccordionPrimitive.Header class=\"flex\" as=\"div\">\n\t\t\t<AccordionPrimitive.Trigger\n\t\t\t\tclass={cn(\n\t\t\t\t\t\"flex flex-1 items-center justify-between py-4 text-sm font-medium transition-shadow hover:underline [&[data-expanded]>svg]:rotate-180 bg-inherit focus-visible:(outline-none ring-1.5 ring-ring)\",\n\t\t\t\t\tlocal.class,\n\t\t\t\t)}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{local.children}\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tclass=\"h-4 w-4 text-muted-foreground transition-transform duration-200\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\td=\"m6 9l6 6l6-6\"\n\t\t\t\t\t/>\n\t\t\t\t\t<title>Arrow</title>\n\t\t\t\t</svg>\n\t\t\t</AccordionPrimitive.Trigger>\n\t\t</AccordionPrimitive.Header>\n\t);\n};\n\ntype accordionContentProps<T extends ValidComponent = \"div\"> = ParentProps<\n\tAccordionContentProps<T> & {\n\t\tclass?: string;\n\t}\n>;\n\nexport const AccordionContent = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, accordionContentProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as accordionContentProps, [\n\t\t\"class\",\n\t\t\"children\",\n\t]);\n\n\treturn (\n\t\t<AccordionPrimitive.Content\n\t\t\tclass={cn(\n\t\t\t\t\"animate-accordion-up overflow-hidden text-sm data-[expanded]:animate-accordion-down\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<div class=\"pb-4 pt-0\">{local.children}</div>\n\t\t</AccordionPrimitive.Content>\n\t);\n};\n"
		}
	],
	"type": "components:ui"
}
