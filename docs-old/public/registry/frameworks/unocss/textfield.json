{
	"name": "textfield",
	"dependencies": ["@kobalte/core"],
	"files": [
		{
			"name": "textfield.tsx",
			"content": "import { cn } from \"@/libs/cn\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type {\n\tTextFieldDescriptionProps,\n\tTextFieldErrorMessageProps,\n\tTextFieldInputProps,\n\tTextFieldLabelProps,\n\tTextFieldRootProps,\n} from \"@kobalte/core/text-field\";\nimport { TextField as TextFieldPrimitive } from \"@kobalte/core/text-field\";\nimport { cva } from \"class-variance-authority\";\nimport type { ValidComponent, VoidProps } from \"solid-js\";\nimport { splitProps } from \"solid-js\";\n\ntype textFieldProps<T extends ValidComponent = \"div\"> =\n\tTextFieldRootProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const TextFieldRoot = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, textFieldProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as textFieldProps, [\"class\"]);\n\n\treturn <TextFieldPrimitive class={cn(\"space-y-1\", local.class)} {...rest} />;\n};\n\nexport const textfieldLabel = cva(\n\t\"text-sm data-[disabled]:(cursor-not-allowed opacity-70) font-medium\",\n\t{\n\t\tvariants: {\n\t\t\tlabel: {\n\t\t\t\ttrue: \"data-[invalid]:text-destructive\",\n\t\t\t},\n\t\t\terror: {\n\t\t\t\ttrue: \"text-destructive text-xs\",\n\t\t\t},\n\t\t\tdescription: {\n\t\t\t\ttrue: \"font-normal text-muted-foreground\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tlabel: true,\n\t\t},\n\t},\n);\n\ntype textFieldLabelProps<T extends ValidComponent = \"label\"> =\n\tTextFieldLabelProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const TextFieldLabel = <T extends ValidComponent = \"label\">(\n\tprops: PolymorphicProps<T, textFieldLabelProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as textFieldLabelProps, [\"class\"]);\n\n\treturn (\n\t\t<TextFieldPrimitive.Label\n\t\t\tclass={cn(textfieldLabel(), local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype textFieldErrorMessageProps<T extends ValidComponent = \"div\"> =\n\tTextFieldErrorMessageProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const TextFieldErrorMessage = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, textFieldErrorMessageProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as textFieldErrorMessageProps, [\n\t\t\"class\",\n\t]);\n\n\treturn (\n\t\t<TextFieldPrimitive.ErrorMessage\n\t\t\tclass={cn(textfieldLabel({ error: true }), local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype textFieldDescriptionProps<T extends ValidComponent = \"div\"> =\n\tTextFieldDescriptionProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const TextFieldDescription = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, textFieldDescriptionProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as textFieldDescriptionProps, [\n\t\t\"class\",\n\t]);\n\n\treturn (\n\t\t<TextFieldPrimitive.Description\n\t\t\tclass={cn(textfieldLabel({ description: true }), local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype textFieldInputProps<T extends ValidComponent = \"input\"> = VoidProps<\n\tTextFieldInputProps<T> & {\n\t\tclass?: string;\n\t}\n>;\n\nexport const TextField = <T extends ValidComponent = \"input\">(\n\tprops: PolymorphicProps<T, textFieldInputProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as textFieldInputProps, [\"class\"]);\n\n\treturn (\n\t\t<TextFieldPrimitive.Input\n\t\t\tclass={cn(\n\t\t\t\t\"flex h-9 w-full rounded-md border border-input bg-inherit px-3 py-1 text-sm shadow-sm file:(border-0 bg-transparent text-sm font-medium) placeholder:text-muted-foreground focus-visible:(outline-none ring-1.5 ring-ring) disabled:(cursor-not-allowed opacity-50) transition-shadow\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n"
		}
	],
	"type": "components:ui"
}
